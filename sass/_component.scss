
//the container of the components is te header 

// SEARCH
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

//------------------------------
//SEARCH
.search {
    flex: 0 0 40%;
    display: flex;
    justify-content: center; //horizontally center
    align-items: center; //vertically center
   
    @media only screen and (max-width: $bp-smallest) {
       order: 1; //do te jete e fundit ne rradhe
       flex: 0 0 100%;
       background-color: var(--color-grey-light-2);
    }


    &__input {

        font-family: inherit;// input element doesn't inherit the font-family we should put it down manually
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px; //for the rounded edges just an high number doesn't matter if its pixels
        width: 90%;
        transition: all .2;
        margin-right: -3.25rem; //button should move up from input

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }
        //changing the color of the placeholder with the -webkit placeholder pseudoclass
        &::-webkit-input-placeholder{
            font-weight: 100;
            color: var(--color-grey-light-4);
            // &:focus
        }


    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);


        &:focus{
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }

    }

    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3)//change the color of the icon 
    }
}


//-------------------------
//USER NAVIGATION
.user-nav { 
    display: flex;
    align-items: center;
    align-self: stretch;
    
 
    //select all the direct children
    & > * {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
        //precise positioning of notification icon    
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%; //100px or 50%? the text changes the form and is not a circle anymore 
        background-color: var(--color-primary);
        color:#fff;

        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

        //we use flex-box to center text/ in this case is 4'th level of flex-box
        display: flex;
        justify-content: center;
        align-items: center;
    }
   
    // &__user {
    // }
    
    &__user-photo {
        height: 3.75rem;
       border-radius: 50%;

       display: flex;
       align-items: center;
       margin-right: 1rem;
    }

    // &__user-name {
    // }
}


//---------------------------------
//SIDE NAVIGATION
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: flex;  
        margin: 0;
    }
    
    // flex-direction: column;
    // align-items: flex-start;



    &__item {
        position: relative;

        @media only screen and (max-width: $bp-medium) {
            flex: 1; // secila do te rritet pergjate width te containerit 
            }

        &:not(:last-child) {
            margin-bottom: .5rem;
           
            @media only screen and (max-width: $bp-medium) {
            margin: 0;
            }
        }
    }

    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%; //the same hight as the list item
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0); //it's going to grow from center to the y direction
       // transform-origin: bottom; //start form the bottom/
        transition: transform .2s,  
                    width .4s cubic-bezier(1,0,0,1) .2s, 
                    background-color .1s;
                    // And so we want a delay of .2s, which is exactly the time it takes  for this first transform to happen.  So, first the transform happens during these .2s, and we wait this time  until we start transitioning the width. And that's then going to take .4s, 
                    //cubic-bezier(1,0,0,1) starts slowly, quick in the middle and than slow at the end
                    //background animation after the click
                    
    }

    //The variant we're using says "when hovering the item, create and style a before pseudo-element like this", whereas yours says "when hovering the before pseudo-element of item, style it like this". If the before pseudo-element was not created beforehand, and is not of a sufficient width or height to be hovered, then that second selector will do nothing.

    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1); 
        width: 100%; 
        // rritja e ngjyres nga poshte dhe lart  njeheresh
        //nga 3 px do te rritet pergjat ter width te elementit
       //&__item--active::before in order to stay active 
       
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color:var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        z-index: 10; //for the text to apear above the transition hover we added
        position: relative; //in order for the z-index to function

        display: flex;
        align-items: center;

        @media only screen and (max-width: $bp-medium) {
            justify-content: center;
            padding: 2rem;
        }

        @media only screen and (max-width: $bp-small) {
            flex-direction: column;
            padding: 1.5rem .5rem;
        }
    }

    // &__link:hover {
    //     color: orangered;
    // } the current color of the svg would be orangerend when we hover

    &__icon {
        //usually the svg are styled as squares
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        //color:blue; 
        fill: currentColor; //it means the color of the parent element/ if we set up the color blue/ that would be the current color
        
        @media only screen and (max-width: $bp-small) {
            margin-right: 0;
            margin-bottom: .7rem;
            width: 1.5rem;
            height: 1.5rem;
        }
    }
}


//-------------------------
//LEGAL TEXT
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem; 

    @media only screen and (max-width: $bp-medium) {
        display: none; 
    }
}

//----------------------------
//GALLERY
.gallery {
    display: flex;

    &__photo {
        // for a responsive images and fluid the dimensions of the omage element should be in %
        width: 100%;
        display: block; //to avoid the space underneth 
    }
}


//------------------------------
//HOTEL OVERVIEW
.overview {
    display: flex;
    align-items: center;
    border-bottom: 1px solid  var(--line);

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
            padding: 1.25rem 2rem;
        }
    }


    &__stars {
        //flex: 1; //this flex item should grow and occupy all the available space.
        // background-color: blue; //test 
        margin-right: auto; //ne vend te flex:1, sepse ne vend qe te zere ter vendin ajo pozicionohet aty ku duam dhe ze aq vend sa i duhet
        display: flex; //svg behave like a inline element/ to take out the whitespace we set the display flex
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill:var(--color-primary)
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        margin-left: 3rem;
        color: #fff;

        align-self: stretch;// override the align-items:center only for this element
        padding: 0 2.25rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center; 

        @media only screen and (max-width: $bp-small) {
            flex-direction: column;
            padding: 0 1.5rem;
        }
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
        }
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;

        @media only screen and (max-width: $bp-small) {
            font-size: .5rem;
        }
    }
}

////////////////////////////
//BUTTON
.btn-inline{
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor;//the border will have the exact same color as the text,
    padding: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    
    & span {
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1);

        span {
            margin-left: 8px; //small numbers no problem for usin pixel
        }
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;//do te pulsoje gjithe kohes per sa kohe do te jete on focus
    }
}


////////////////////////////
//KEYFRAMES
@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50%{
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}

////////////////////////////
//PARAGRAPH
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}


////////////////////////////
//LIST
.list {
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;
    flex-wrap: wrap; // per ti vene njera pas tjetres dhe me width 50% do te zere vetem dy ne cdo rresht

    &__item {
        flex: 0 0 50%; // per ti ndare ne dy lsita vendosim width  per secilen 50 % ne kete menyre do te zer dy items per rresht
        margin-bottom: .5rem;
    }

    &__item::before {
        content: ""; //before nuk punone po nuk e specifikove
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;

        //older browseres
        //background-image: url(../img/chevron-thin-right.svg);
        //background-size: cover;

        @supports (-webkit-mask-image:url() or (mask-image: url())) {    
            //newer browsers 
            //Well, basically a mask defines an area where we can look through the  and see what's behind that element.
            background-color: var(--color-primary);
            -webkit-mask-image: url(../img/chevron-thin-right.svg); //- -webkit-mask-image nuk punonte
            -webkit-mask-size: cover; //the icon covers the intire space
            mask-image: url(../img/chevron-thin-right.svg); //for the future
            mask-size: contain;
        }
    }  
}


////////////////////////////
//RECOMMEND
.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);

    display: flex;
    align-items: center;
    //justify-content: space-between;

    &__count{
        margin-right: auto; //ka te njejtin efekt
    }

    &__friends {
        display: flex; // qe fotot te qendrojne gjithmone ngjitur
    }

    &__photo {
    // We set the box-sizing to all the elements to border-box, and what border-box does is that it includes the padding and the border into the width and height of the element. And that's usually exactly what we want. But in this situation, it's not what we want. In this situation we want the border to be added on top of our height and the width. And so we can set it back to the default

        box-sizing: content-box;//the images stay the exact same size and dont shrink when we add the border
        height: 4rem;
        width: 4rem;
        border-radius: 50%; //make them round
        border: 3px solid #fff;

        &:not(:last-child) {
            margin-right: -2rem;
        }
    }
}

////////////////////////////
//REVIEWS
.review {
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative;
    overflow: hidden;

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    &__text {
        margin-bottom: 2rem;
        z-index: 10;
        position: relative;
        
        // only because z-index doesnt work without a possition property set                                                                          
    }

    &__user {
        display: flex;
        align-items: center;
        
    }

    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__user-box {
        margin-right: auto;
    }

    &__user-name {
        font-size: 1.1rem;
        font-weight: 600;
        text-transform: uppercase;
        margin-bottom: .4rem;
    }

    &__user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }

    &__rating {
        color: var(--color-primary);
        font-size: 2.2rem;                    
        font-weight: 300;
    }

    &::before {
        content: "\201C"; //css-tricks.com
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        line-height: 1;
        font-size: 20rem;
        color: var(--color-grey-light-2);
        font-family: sans-serif;
        z-index: 1;
    }

}

////////////////////////////
//CALL TO ACTION cta
.cta {
    padding: 3.5rem 0;
    text-align: center;

    @media only screen and (max-width: $bp-medium) {
        padding: 2.5rem 0;
        
    }
    &__book-now {
        font-size: 1.5rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;
    }
}

////////////////////////////
//CALL TO ACTION 
.btn {
    overflow: hidden; // per te fshehur textin ose elementet qe dalin jashte box-model

    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border: none;
    border-radius: 100px;
    background-image: linear-gradient(to right, 
                    var(--color-primary-light), 
                    var(--color-primary-dark));
    color: #fff; 
    position: relative;
    cursor: pointer;

    //repeated code in both classes
    & > * {
        display: inline-block; //in order to use padding
        height: 100%;
        width: 100%; //the size of the parent
        transition: all .2s;
    }

    &__visible {
        padding: 2rem 7.5rem; //decides the size of the button
    }
    
    &__invisible {
        display: inline-block;
        position: absolute;
        padding: 2rem 0;
        left: 0;
        top: -100%; //is it's going to move up exactly the size of the element. If this element is like 50px high, it will move up 100% of that.  And so 50px.  
    }

    &:hover &__visible { 
        transform: translateY(100%);   
    }

    &:hover &__invisible {
        top: 0;
    }

    &:hover {
        // background-image: linear-gradient(to right, var(--color-primary-dark), var(--color-primary-light));
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));             
    }
    
    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}

